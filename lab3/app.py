import pickle
from gigachat import GigaChat
from gigachat.models import Chat, Messages, MessagesRole
import streamlit as st
from bs4 import BeautifulSoup
import base64


def get_token():
    with open("key.pickle", 'rb') as file:
        token = pickle.load(file)
    return token


giga = GigaChat(
        credentials=get_token(),
        verify_ssl_certs=False
    )


def create_app():
    st.title('–ü—Ä–µ–≤—Ä–∞—Ç–∏ —Ç–µ–∫—Å—Ç –≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ')
    st.text('–°–µ—Ä–≤–∏—Å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –ø–æ–º–æ—â—å—é GigaChatüòé')
    st.set_option('client.showErrorDetails', False)
    container = st.container(height=50, border=False)
    prompt = container.chat_input('–û–ø–∏—à–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...', accept_file=False)
    if prompt:
        with st.spinner("–ü–æ–ª—É—á–∞—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", show_time=True):
            response = get_response(prompt)
            try:
                image = get_image(response, prompt)
                st.image(image, caption=prompt)
                st.download_button(label='–ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ',
                                   data=image,
                                   file_name=f'{prompt}.jpeg',
                                   mime='image/jpeg',
                                   icon=':material/download:',
                                   on_click='ignore')                
            except Exception as e: pass


def get_response(prompt):
    payload = Chat(
        messages=[
            Messages(
                role=MessagesRole.USER,
                content=prompt
                )
            ],
        function_call="auto"
    )
    response = giga.chat(payload).choices[0].message.content
    print(response)
    return response


def get_image(response, prompt):
    try:
        file_id = BeautifulSoup(response, 'html.parser').find('img').get('src')
        image = giga.get_image(file_id)
        image = base64.b64decode(image.content)        
    except Exception as e:        
        st.warning(f"""–ú–æ–¥–µ–ª—å –Ω–µ —Å–º–æ–≥–ª–∞ –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É:
                   "{prompt}".üò• –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∂–µ–ª–∞–µ–º–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.
                   –ù–∞–ø—Ä–∏–º–µ—Ä: \"–ë–µ–ª–∞—è —Å—É–±–º–∞—Ä–∏–Ω–∞ –≤ –ø–æ—Ä—Ç—É\" –∏–ª–∏ 
                   \"–ö—Ä–∞—Å–Ω—ã–µ —Ä–æ–∑—ã –≤ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ–π –ø–ª–µ–Ω–∫–µ, –ø–µ—Ä–µ–≤—è–∑–∞–Ω–Ω—ã–µ —Å–∏–Ω–µ–π –ª–µ–Ω—Ç–æ–π\"""", 
                   icon='‚ö†Ô∏è')

    return image


if __name__ == "__main__":
    create_app()